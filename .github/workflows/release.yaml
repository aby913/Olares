name: Install Wizard Release

on:
  workflow_dispatch:
    inputs:
      tags:
        description: "Release Tags"

jobs:
  push:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tags }}

      - env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "ap-southeast-1"
        run: |
          bash scripts/image-manifest.sh

  upload-package:
    needs: [push]
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tags }}

      - name: Package installer
        run: |
          bash scripts/build.sh ${{ github.event.inputs.tags }}

      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "ap-southeast-1"
        run: |
          md5sum install-wizard-v${{ github.event.inputs.tags }}.tar.gz > install-wizard-v${{ github.event.inputs.tags }}.md5sum.txt && \
          aws s3 cp install-wizard-v${{ github.event.inputs.tags }}.md5sum.txt s3://zhangliang-s3-test/test2/install-wizard-v${{ github.event.inputs.tags }}.md5sum.txt && \
          aws s3 cp install-wizard-v${{ github.event.inputs.tags }}.tar.gz s3://zhangliang-s3-test/test2/install-wizard-v${{ github.event.inputs.tags }}.tar.gz

  signing: # todo 签名
    runs-on: windows-latest
    steps:
      - name: "Signing"
        run: |
          pwd

  release:
    runs-on: ubuntu-latest
    needs: [upload-package]

    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tags }}

      - name: Update env
        working-directory: ./build/installer
        run: |
          echo 'DEBUG_VERSION="false"' > .env

      - name: Package installer
        run: |
          bash scripts/build.sh ${{ github.event.inputs.tags }}

      - name: "Archives"
        run: |
          cp .dist/install-wizard/install.sh build/installer
          cp build/installer/install.sh build/installer/publicInstaller.sh
          cp build/installer/install.sh build/installer/publicInstaller.latest
          cp .dist/install-wizard/install.ps1 build/installer
          cp build/installer/install.ps1 build/installer/publicInstaller.latest.ps1

      - name: Release public files
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ github.event.inputs.tags }} Release
          tag_name: ${{ github.event.inputs.tags }}
          files: |
            install-wizard-v${{ github.event.inputs.tags }}.tar.gz
            build/installer/publicInstaller.sh
            build/installer/publicInstaller.latest
            build/installer/install.sh
            build/installer/publicInstaller.latest.ps1
            build/installer/install.ps1
            build/installer/publicAddnode.sh
            build/installer/version.hint
            build/installer/publicRestoreInstaller.sh
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
